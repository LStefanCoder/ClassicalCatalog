<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link href="../css/bootstrap.min.css" rel="stylesheet">
    <link href="../css/piece.css" rel="stylesheet" >
    <script src="../js/bootstrap.min.js"></script>
    
    <!--including the midi player script-->
    <script src="https://www.midijs.net/lib/midi.js"></script>
    
    <script src="../../js/opensheetmusicdisplay.min.js"></script>

    <!--for the midi player, see https://github.com/cifkao/html-midi-player-->
    <script src="https://cdn.jsdelivr.net/combine/npm/tone@14.7.58,npm/@magenta/music@1.23.1/es6/core.js,npm/html-midi-player@1.5.0"></script>
    
    <title>Music piece</title>
</head>
<body>

  <!-- the MIDI playback script -->
  <script>

    //based on https://book.verovio.org/interactive-notation/playing-midi.html, converting the Midi string passed by the function in index.js into a format that Midi.js is able to play
    

    //these two functions will be attached to the two buttons
    function MidiStart()
    {
      MIDIjs.play(`<%= result['midiData'] %>`);
      console.log("a");
    }

    function MidiStop()
    {
      MIDIjs.stop();
    }



  </script>

    <!--first comes the navbar-->

    <nav class="navbar sticky-top navbar-light bg-light">
      <h3 class="navbarHeader"><a class="navbarMainlink" href="/">Music database</a></h3>
      <!--the link-underline-opacity-0 property removes the underline effect from the link-->
      <a class="navbarAboutlink link-underline link-underline-opacity-0" href="/about">About</a>
    </nav>

    <!--the back arrow redirects to the original page-->
    <a href="<%= previousURL %>"><img src="../svg/left-arrow-circle2-svgrepo-com.svg" alt="" style="height: 50px" class="pdfIcon"></a>

  <div class="mainBody">

    <h1><%= result['Title'] %></h1>
    <% if(result['NoofParts'] != 1) { %>
      <h2>Part <%= result['Part'] %> of <%= result['NoofParts'] %></h2>
    <% } %>
    <h2>Composed by <%= result['Composer'] %></h2>

    <div class="separator"></div>
    
    <h3>Details</h3>
    <p>Genre: <%= result['Genre'] %></p>
    <p>Key: <%= result['Key'] %></p>
    <p>Instruments: <%= result['Instruments'] %></p>
    <p>Year of composition: <%= result['Year'] %></p>
    <p>Source: <a href="<%= result['Link'] %>" class="aboutlink"><%= result['Link'] %></a></p>

    <!--this page leads the user to further information about the composer-->
    <p><a href="/composers/<%= composer['ID'] %>">Information about the composer</a></p>

    <div class="separator"></div>

    <!--PDF icon from svgrepo.com, CC0 license-->
    <!--the link to the PDF file of the score-->
    <h3>The score</h3>
    <p><a href="/works/<%= result['ID'] %>/pdf""><img src="../svg/pdf-file-format-symbol-svgrepo-com.svg" alt="" style="height: 50px" class="pdfIcon"></a></p>
    <div style="height: 1em;"></div>
    <p><a href="/works/<%= result['ID'] %>/xml"><img src="../svg/svgicon.svg" alt="" style="height: 50px" class="pdfIcon"></a></p>
    
    <div class="separator"></div>
    
    <!--the following two divs contain the links to the individual performances and manuscripts-->
    <div>
      <h3>Manuscripts</h3>

      <p><%= result['ManuscriptText1'] %> <a href="<%= result['ManuscriptLink1'] %>">(link)</a></p>
      <% if(result['ManuscriptLink2']) { %>
        <p><%= result['ManuscriptText2'] %> <a href="<%= result['ManuscriptLink2'] %>">(link)</a></p> 
      <% } %>
    </div>

    <div class="separator"></div>

    <div>
      <h3>Performances</h3>

      <p><%= result['PerformanceText1'] %> <a href="<%= result['PerformanceLink1'] %>">(link)</a></p> 
        <% if(result['PerformanceLink2']) { %>
      <p><%= result['PerformanceText2'] %> <a href="<%= result['PerformanceLink2'] %>">(link)</a></p> 
      <% } %>
    </div>

    <div class="separator"></div>

    <button id="playMidiButton" onclick="MidiStart()">Play</button>
    <button id="pauseMidiButton" onclick="MidiStop()">Pause</button>

    <!--<midi-player
      id="midiPlayer"
      sound-font visualizer="#myVisualizer">
      src="<%= result['midiData'] %>"
    </midi-player>
    <midi-visualizer type="piano-roll" id="myVisualizer"></midi-visualizer>-->


    <div class="separator"></div>
  

    <h3>Preview</h3>
    <p>The first two measures</p>

    <!--this div contains the score as rendered by OSMD-->
    <!--the height of the score can be adjusted here-->
    <div id="sheetMusicContainer" style="height: 100px"></div>

    <!--this code will show the first page of the score-->
    <!--<script>
      //the OSMD standard code, taken from the main wiki

      var osmd = new opensheetmusicdisplay.OpenSheetMusicDisplay("sheetMusicContainer");
        osmd.setOptions({
          //all options see https://github.com/opensheetmusicdisplay/opensheetmusicdisplay/blob/master/src/OpenSheetMusicDisplay/OSMDOptions.ts
          backend: "svg",
          //disabled, because the credits are already displayed above
          drawCredits: false,
          drawingParameters: "compacttight" // don't display title, composer etc., smaller margins
        });
        osmd
          .load(XMLString)
          .then(
            function() {
              osmd.render(); 
            }
          );
    </script>-->
    
    <!--the unused Opensheetmusicdisplay code-->    

    <!--contains the XML data-->
    <div id="sheetMusicContainer" style="height: 100px">
    </div>
    <script>
      
        var XMLStartString = `<%= result['XML'] %>`;
        var XMLUnescapedString = XMLStartString.replace(/&amp;/g, '&')
  .replace(/&lt;/g, '<')
  .replace(/&gt;/g, '>')
  .replace(/&quot;/g, '"')
  .replace(/&#34;/g, '"')
  .replace(/&#39;/g, "'");;
        //var XMLString1 = new DOMParser().parseFromString(XMLUnescapedString, "text/xml");

        

        var XMLString = XMLUnescapedString;
        //console.log(XMLString);
        /*//first, we assign the XML variable to a string
        var XMLStartString = `<%= result['XML'] %>`;
        var XMLString1 = new DOMParser().parseFromString(XMLStartString, "text/xml");
        var XMLString2 = XMLString1.documentElement.textContent;
        console.log(XMLString2);*/

        //var osmd = new opensheetmusicdisplay.OpenSheetMusicDisplay("sheetMusicContainer");
        var osmd = new opensheetmusicdisplay.OpenSheetMusicDisplay("sheetMusicContainer");
        osmd.setOptions({
          //all options see https://github.com/opensheetmusicdisplay/opensheetmusicdisplay/blob/master/src/OpenSheetMusicDisplay/OSMDOptions.ts
          backend: "svg",
          //disabled, because the credits are already displayed above
          drawCredits: false,
          drawingParameters: "compacttight", // don't display title, composer etc., smaller margins
          drawUpToMeasureNumber: 2
        });
        //reducing the size of the score that it doesn't overwhelme the entire page
        osmd.zoom = 0.01;
        osmd
          .load(XMLString)
          .then(
            function() {
              osmd.render(); 
            }
          );
      </script>

  </div>

</body>
</html>


<!--see image here: https://github.com/opensheetmusicdisplay/opensheetmusicdisplay/issues/658
https://github.com/opensheetmusicdisplay/opensheetmusicdisplay/blob/4068565/src/MusicalScore/Graphical/EngravingRules.ts#L443
MaxPageToDrawNumber here https://opensheetmusicdisplay.github.io/classdoc/classes/EngravingRules.html#MaxPageToDrawNumber-->